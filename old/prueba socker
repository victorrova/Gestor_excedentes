 * SPDX-FileCopyrightText: 2022 Espressif Systems (Shanghai) CO LTD
 *
 * SPDX-License-Identifier: Unlicense OR CC0-1.0
 */
#include "sdkconfig.h"
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <errno.h>
#include <netdb.h>            // struct addrinfo
#include <arpa/inet.h>
#include "esp_netif.h"
#include "esp_log.h"




static const char *TAG = "example";
static const char *payload = "Message from ESP32 ";


int tcp_client(const char* addr, int port)
{
  
    int addr_family = 0;
    int ip_protocol = 0;

    struct sockaddr_in dest_addr;
    inet_pton(AF_UNSPEC, addr, &dest_addr.sin_addr);
    dest_addr.sin_family = AF_UNSPEC;
    dest_addr.sin_port = htons(port);

    addr_family = AF_UNSPEC;
    ip_protocol = IPPROTO_IP;
    int sock =  socket(addr_family, SOCK_STREAM, ip_protocol);
    if (sock < 0) {
        ESP_LOGE(__FUNCTION__, "Unable to create socket: errno %d", errno);
        return -1;
    }
    ESP_LOGI(__FUNCTION__, "Socket created, connecting to %s:%d", addr, port);

    int err = connect(sock, (struct sockaddr *)&dest_addr, sizeof(dest_addr));
    if (err != 0) {
        ESP_LOGE(__FUNCTION__, "Socket unable to connect: errno %d", errno);
        return -1;
    }
    ESP_LOGI(__FUNCTION__, "Successfully connected");
    return sock;

}